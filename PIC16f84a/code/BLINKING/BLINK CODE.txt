#include <xc.inc>

    ; CONFIG
  CONFIG  FOSC = XT             ; Oscillator Selection bits (XT oscillator)
  CONFIG  WDTE = OFF            ; Watchdog Timer (WDT disabled)
  CONFIG  PWRTE = OFF           ; Power-up Timer Enable bit (Power-up Timer is disabled)
  CONFIG  CP = OFF              ; Code Protection bit (Code protection disabled)

// config statements should precede project file includes.
#include <xc.inc>

  
; When assembly code is placed in a psect, it can be manipulated as a
; whole by the linker and placed in memory.  
;
; In this example, barfunc is the program section (psect) name, 'local' means
; that the section will not be combined with other sections even if they have
; the same name.  class=CODE means the barfunc must go in the CODE container.
; PIC18's should have a delta (addressible unit size) of 1 (default) since they
; are byte addressible.  PIC10/12/16's have a delta of 2 since they are word
; addressible.  PIC18's should have a reloc (alignment) flag of 2 for any
; psect which contains executable code.  PIC10/12/16's can use the default
; reloc value of 1.  Use one of the psects below for the device you use:

PSECT   resetVect,class=CODE,delta=2 ; PIC10/12/16
; psect   barfunc,local,class=CODE,reloc=2 ; PIC18
resetVect:
    PAGESEL main
    goto main
    
PSECT code, delta=2
main:
	
	 COUNTER1   EQU	    30h
   	 COUNTER2   EQU	    40h
   
	 BSF   STATUS,5
         bsf   TRISA,0     ;set RA0 as input
	 bsf   TRISA,1     ;set RA0 as input
	 bsf   TRISA,2     ;set RA0 as input
	 bsf   TRISA,3     ;set RA0 as input
	 bsf   TRISA,4     ;set RA0 as input
	 bsf   TRISA,5     ;set RA0 as input
	 
	 bcf   TRISB,0     ;set RB7 as output
         bcf   TRISB,1     ;set RB7 as output
         bcf   TRISB,2     ;set RB7 as output
         bcf   TRISB,3     ;set RB7 as output
         bcf   TRISB,7     ;set RB7 as output
         bcf   TRISB,6     ;set RB7 as output
         bcf   TRISB,5     ;set RB7 as output
         bcf   TRISB,4     ;set RB7 as output
         
	 bcf   STATUS,5
	 CLRF  PORTA
	 CLRF  PORTB
	 CLRW
	 
    loop1:
	;MOVF PORTA,W    ;READ 2 SWITCHES
	;MOVWF PORTB     ;OUTPUT DATA TO PORTB
	MOVLW 0x80
	movwf PORTB
	CALL DELAY
	MOVLW 0x00
	movwf PORTB
	CALL DELAY
	
	
	goto loop1 
    goto main

DELAY :
    LOOP5:  DECFSZ	    COUNTER1,1
	    goto LOOP5
	    DECFSZ	    COUNTER2,1
	    goto LOOP5
    RETURN
		
    
END resetVect